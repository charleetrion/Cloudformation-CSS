AWSTemplateFormatVersion: '2010-09-09'

Resources:
  MyLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HTTP traffic"
      VpcId:  !ImportValue MyVPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: "Name"
          Value: MyLoadBalancerSecurityGroup

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "MyApplicationLoadBalancer"
      Scheme: internet-facing
      SecurityGroups:
        - !Ref MyLoadBalancerSecurityGroup
      Subnets:
        - !ImportValue MyPublicSubnetId
        - !ImportValue MyPublicSubnet2Id
      Type: application
      Tags:
        - Key: "Name"
          Value: "MyApplicationLoadBalancer"

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !ImportValue TargetGroupArn

Outputs:
  LoadBalancerDNSName:
    Value: !GetAtt MyLoadBalancer.DNSName
    Export:
      Name: MyLoadBalancerDNSName

  MyLoadBalancerSecurityGroupId:
    Value: !Ref MyLoadBalancerSecurityGroup
    Export:
      Name: MyLoadBalancerSecurityGroupId

  ALBListenerArn:
    Description: ARN del Listener del ALB
    Value: !Ref MyListener
    Export:
      Name: ALBListenerArn
